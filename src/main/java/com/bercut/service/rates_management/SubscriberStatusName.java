//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.06.03 at 05:02:25 PM MSK 
//


package com.bercut.service.rates_management;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SubscriberStatusName.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SubscriberStatusName"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="prepared"/&gt;
 *     &lt;enumeration value="activated"/&gt;
 *     &lt;enumeration value="blocked"/&gt;
 *     &lt;enumeration value="closed"/&gt;
 *     &lt;enumeration value="suspended"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "SubscriberStatusName")
@XmlEnum
public enum SubscriberStatusName {


    /**
     * Подготовлен
     * 
     */
    @XmlEnumValue("prepared")
    PREPARED("prepared"),

    /**
     * Активирован
     * 
     */
    @XmlEnumValue("activated")
    ACTIVATED("activated"),

    /**
     * Заблокирован
     * 
     */
    @XmlEnumValue("blocked")
    BLOCKED("blocked"),

    /**
     * Закрыт
     * 
     */
    @XmlEnumValue("closed")
    CLOSED("closed"),

    /**
     * Заморожен
     * 
     */
    @XmlEnumValue("suspended")
    SUSPENDED("suspended");
    private final String value;

    SubscriberStatusName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SubscriberStatusName fromValue(String v) {
        for (SubscriberStatusName c: SubscriberStatusName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
